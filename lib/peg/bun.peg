
import Type from type.peg;

TopLevel
 = Template
 ;

Spacing
  = [ \t]+
  ;
_
  = ([ \t]+ / Comment)*
  ;
NL
  = ([ \t\n]+ / Comment)*
  ;
Comment
  = '/*' (!'*/' .)* '*/'
  / '//' (![\r\n] .)* [\r\n]
  ;

Template
  = NL ('bun' / 'template') Spacing 
    << TemplateName@ _ Params@ _ BunAnno@ _ '{' _ '\n' Section@ '}' #bun >>
  ;
TemplateName
  = << '#'? [A-Za-z0-9_.]+ #name >>
  ;
Params
  = << ('(' _ (Param@ (_ ',' _ Param@)*)? _ ')' / '') #params >>
  ;
Param
  = << BunName@ _ BunAnno@? #param >>
  ;
BunAnno 
  = ':' _ BunType 
  / << '' #type >>
  ;
BunType
  = NodeType / ValueType / Type
  ;
NodeType
  = << '#' [A-Za-z0-9_.]+  #bun.nodetype >>
  ;
ValueType
  = << "'" (!"'" .)* "'"   #bun.valuetype >>
  ;

Section
  = << !'}' Line@* #bun.sec >>
  ;
Line    
  = [|\t] << Chunk@? (Command@ Chunk@)* #bun.line >> '\n'
  / &'$' << (Command@ (![\n$] .)*)* #bun.header >> '\n'
  ;
Chunk 
  = << (![\n$] .)* #bun.chunk >>
  ; 
Command
  = '${' << BunName@ (_ BunName@ #bun.cmd2 / '' #bun.cmd1) >> '}' 
  / '$'  <<'$' #bun.chunk>>
  ;
BunName
  = << [A-Za-z0-9._]+  #symbol >>
  ;

